name: 1. Build and Deploy to DEV
run-name: Executed by ${{ github.actor }} 🚀
on:
  workflow_dispatch:
    inputs:
      change_type:
        description: Change type you have introduced
        required: true
        default: 'PATCH'
        type: choice
        options: 
        - MAJOR
        - MINOR
        - PATCH

permissions: write-all
jobs:
  Build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.create_tag.outputs.tag }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Checkout main branch
        run: git checkout main
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "Installing dependencies"
      - run: echo "Run linter"
      - run: echo "Run tests"
      - name: Create Tag
        id: create_tag
        run: |
          LATEST_TAG=$(git tag -l | tail -1)
          echo "$LATEST_TAG"
          TAG_NAME=""
          if [ -z "$LATEST_TAG" ]; then
            echo "Theres no a tag"
            TAG_NAME="v1.0.0"
          else
            echo "At least one tag exists > $LATEST_TAG"
            MAJOR=$(echo "$LATEST_TAG" | cut -d. -f1 | sed 's/v//')
            MINOR=$(echo "$LATEST_TAG" | cut -d. -f2)
            PATCH=$(echo "$LATEST_TAG" | cut -d. -f3)
            # Increment the appropriate version component
            case ${{ github.event.inputs.change_type }} in
              MAJOR)
                MAJOR=$(($MAJOR + 1))
                MINOR=0
                PATCH=0
                ;;
              MINOR)
                MINOR=$(($MINOR + 1))
                PATCH=0
                ;;
              PATCH)
                PATCH=$(($PATCH + 1))
                ;;
              *)
                echo "Invalid increment version specified"
                exit 1
                ;;
            esac
            TAG_NAME="v${MAJOR}.${MINOR}.${PATCH}"
          fi
          git tag $TAG_NAME
          git push origin $TAG_NAME
          echo "Tag $TAG_NAME created"
          echo "tag=$TAG_NAME" >> "$GITHUB_OUTPUT"
      - name: Build docker image
        run: echo "Build docker image ${{ steps.create_tag.outputs.tag }}"
  Push:
    runs-on: ubuntu-latest
    needs: [Build]
    outputs:
      tag: ${{ needs.Build.outputs.tag }}
    steps:
      - name: Push docker image
        run: echo "Push docker image my_image:${{ needs.Build.outputs.tag }}"
  Deploy:
    runs-on: ubuntu-latest
    needs: [Push]
    steps:
      - name: Deploy
        run: echo "Deploy docker image my_image:${{ needs.Push.outputs.tag }}"
      - run: echo "🍏 This job's status is ${{ job.status }}."